// <auto-generated />
using System;
using BillTrackerApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BillTrackerApp.Migrations
{
    [DbContext(typeof(BillTrackerContext))]
    [Migration("20190914215528_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillTrackerApp.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<int>("CompanyID");

                    b.Property<string>("Country");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress1");

                    b.Property<string>("StreetAddress2");

                    b.HasKey("AddressID");

                    b.HasIndex("CompanyID")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BillTrackerApp.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("BillTrackerApp.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountDue");

                    b.Property<decimal>("AmountPaid");

                    b.Property<decimal>("Balance");

                    b.Property<DateTime>("BillingPeriod");

                    b.Property<int>("CompanyID");

                    b.Property<string>("ConfirmationNumber");

                    b.Property<DateTime>("DatePaid");

                    b.Property<DateTime>("DueDate");

                    b.Property<string>("Note");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("BillTrackerApp.Models.Address", b =>
                {
                    b.HasOne("BillTrackerApp.Models.Company", "Company")
                        .WithOne("CompanyAddress")
                        .HasForeignKey("BillTrackerApp.Models.Address", "CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BillTrackerApp.Models.Invoice", b =>
                {
                    b.HasOne("BillTrackerApp.Models.Company", "Company")
                        .WithMany("Invoices")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
